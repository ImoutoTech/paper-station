edition: 3.0.0
name: web-framework-app
access: 'undefined'
vars:
  region: 'cn-shenzhen'
  functionName: 'ware-house-serverless'
resources:
  ware-house:
    component: fc3
    actions:
      pre-deploy:
        - run: export PATH=/usr/local/versions/node/v20.8.1/bin:$PATH && corepack enable && pnpm install
          path: .
        - run: export PATH=/usr/local/versions/node/v20.8.1/bin:$PATH && corepack enable && pnpm build:be
          path: .
    props:
      region: ${vars.region}
      description: ware-house
      runtime: custom.debian10
      cpu: 0.35
      diskSize: 512
      memorySize: 512
      timeout: 6
      layers:
        - acs:fc:${vars.region}:official:layers/Nodejs20/versions/1
      environmentVariables:
        PATH: >-
          /opt/nodejs20/bin:/usr/local/bin/apache-maven/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ruby/bin
        SSO_URL: ${env(SSO_URL)}
        SSO_ID: ${env(SSO_ID)}
        SSO_SECRET: ${env(SSO_SECRET)}
        SSO_REDIRECT: ${env(SSO_REDIRECT)}
        FRONT_URL: ${env(FRONT_URL)}
        MYSQL_SERVER: ${env(MYSQL_SERVER)}
        MYSQL_PORT: ${env(MYSQL_PORT)}
        MYSQL_USER: ${env(MYSQL_USER)}
        MYSQL_PASSWORD: ${env(MYSQL_PASSWORD)}
        MYSQL_DATABASE: ${env(MYSQL_DATABASE)}
        SALTROUND: ${env(SALTROUND)}
        TOKEN_SECRET: ${env(TOKEN_SECRET)}
        REDIS_HOST: ${env(REDIS_HOST)}
        REDIS_PORT: ${env(REDIS_PORT)}
        REDIS_USERNAME: ${env(REDIS_USERNAME)}
        REDIS_AUTHPASS: ${env(REDIS_AUTHPASS)}
        REDIS_DATABASE: ${env(REDIS_DATABASE)}
      customRuntimeConfig:
        command:
          - cd ./packages/backend && ./bootstrap
        port: 4000
      functionName: ware-house-serverless
      code: .
      logConfig: auto
      triggers:
        - triggerName: http-trigger
          triggerType: http
          triggerConfig:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - HEAD
              - OPTIONS
  finder:
    component: fc3
    actions:
      pre-deploy:
        - run: export PATH=/usr/local/versions/node/v20.8.1/bin:$PATH && corepack enable && pnpm install
          path: .
        - run: export PATH=/usr/local/versions/node/v20.8.1/bin:$PATH && corepack enable && pnpm build:finder
          path: .
    props:
      region: ${vars.region}
      description: ware-house-finder
      runtime: custom.debian10
      memorySize: 512
      cpu: 0.35
      diskSize: 512
      caPort: 4001
      timeout: 6
      layers:
        - acs:fc:${vars.region}:official:layers/Nodejs20/versions/1
      environmentVariables:
        PATH: >-
          /opt/nodejs20/bin:/usr/local/bin/apache-maven/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ruby/bin
        REDIS_HOST: ${env(REDIS_HOST)}
        REDIS_PORT: ${env(REDIS_PORT)}
        REDIS_USERNAME: ${env(FINDER_REDIS_USERNAME)}
        REDIS_AUTHPASS: ${env(FINDER_REDIS_AUTHPASS)}
        REDIS_DATABASE: ${env(REDIS_DATABASE)}
      customRuntimeConfig:
        command:
          - cd ./packages/finder && ./bootstrap
        port: 4001
      functionName: ware-house-finder-serverless
      code: .
      logConfig: auto
      triggers:
        - triggerName: http-trigger
          triggerType: http
          triggerConfig:
            authType: anonymous
            methods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - HEAD
              - OPTIONS
  